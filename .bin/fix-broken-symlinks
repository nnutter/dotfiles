#!/usr/bin/env perl

use strict;
use warnings;

use Getopt::Long;
use Cwd;

my $dir     = Cwd::abs_path(Cwd::getcwd());
my $list    = '';
my $old     = '';
my $new     = '';
my $dry_run = '';
my $verbose = '';
my $got_options = GetOptions(
    'dir=s'    => \$dir,
    'list!'    => \$list,
    'old=s'    => \$old,
    'new=s'    => \$new,
    'dry-run!' => \$dry_run,
    'verbose!' => \$verbose,
);
unless ($got_options) {
    exit 1;
}

my $find_cmd = "find -L $dir -type l";

my $error = 0;
if ($list) {
    system($find_cmd . ' -exec ls -lh {} \; | sed -e \'s|^[^\/]*||\'' . " -e 's|$dir/*||g'");
    exit;
} else {
    unless ($old) {
        $error = 1;
        print "ERROR: Must specify value for --old.\n";
    }
    unless ($new) {
        $error = 1;
        print "ERROR: Must specify value for --new.\n";
    }
}
if ($error) {
    exit 2;
}

my @symlinks = qx($find_cmd);
chomp @symlinks;
print "Found " . @symlinks . " symlinks.\n" if $verbose;

for my $symlink (@symlinks) {
    my $target = readlink($symlink);
    (my $new_target = $target) =~ s/$old/$new/;
    if ($new_target ne $target) {
        unless (-e $new_target) {
            print "WARNING: New target does not exist ($new_target).\n";
        }
        print "$symlink: $target -> $new_target\n" if ($verbose || $dry_run);
        unless ($dry_run) {
            unlink($symlink);
            symlink($new_target, $symlink);
        }
    }
}
