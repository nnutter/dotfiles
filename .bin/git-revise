#!/bin/bash

function main {
    source "$(git --exec-path)/git-sh-setup"

    while [ $# -gt 0 ]; do
        OPT="$1"
        shift
        case $1 in
            --) break ;;
            -a|--ancestor)
                ANCESTOR="$1"
                shift
                if [ -z "$ANCESTOR" ]; then
                    die "ERROR: '$OPT' requires an argument."
                fi
                ;;
        esac
    done

    if [ $# -gt 0 ]; then
        die "ERROR: Unexpected arguments: $@."
    fi

    if [ -z "$ANCESTOR" ]; then
        if git rev-parse @{u} > /dev/null 2>&1; then
            ANCESTOR='@{u}'
        else
            die "ERROR: No ancestor specified and no upstream branch to default to."
        fi
    fi

    HEAD=$(git rev-parse HEAD)
    ANCESTRAL_COMMIT=$(git merge-base $ANCESTOR $HEAD)
    if [ -z "$ANCESTRAL_COMMIT" ]; then
        die "ERROR: Failed to determine ancestral commit from ancestor: $ANCESTOR."
    fi

    if [ "$ANCESTRAL_COMMIT" == "$HEAD" ]; then
        echo 'Only one commit beyond ancestor. Either commit additional changes and then revise or stage any changes and use `git commit --amend` instead.'
        exit 0
    fi

    STASH_COUNT=$(git stash list | wc -l)
    git stash save --include-untracked --quiet
    NEW_STASH_COUNT=$(git stash list | wc -l)
    if [ $NEW_STASH_COUNT -gt $STASH_COUNT ]; then
        echo 'Stashed some changes.'
    fi
    git rebase --interactive $ANCESTRAL_COMMIT

    if [ $NEW_STASH_COUNT -gt $STASH_COUNT ]; then
        if [ -d "${GIT_DIR}/rebase-merge" ]; then
            echo 'Stashed changed were *not* re-applied since you are still rebasing. You will need to `git stash apply` when you are done.'
        else
            echo 'Re-applying stashed changes.'
            git stash apply
        fi
    fi

}

SUBDIRECTORY_OK=1
OPTIONS_SPEC="\
git revise
git revise --ancestor <ancestor>

Easily revise your local branch history without having to rebase onto upstream at the same time.
--
h            Show this help.
a,ancestor=  Specify an ancestor. Defaults to tracked branch.
"

main "$@"
