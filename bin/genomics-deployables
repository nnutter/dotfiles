#!/usr/bin/env bash

main() {
    # shellcheck disable=1090
    source "$(git --exec-path)/git-sh-setup"

    GIT_WORK_TREE="$(git rev-parse --show-toplevel)"

    local OUTPUT TAG
    while [ $# -gt 0 ]
    do
        OPT="$1"
        shift
        case $OPT in
            --) break ;;
            -o) OUTPUT="$1"; shift;;
            -t) TAG="$1"; shift;;
        esac
    done

    DEPLOYABLES=()
    for DEPLOYABLE in "$@"
    do
        DEPLOYABLES+=($(echo "$DEPLOYABLE" | tr ',' ' '))
    done

    validate_inputs "$OUTPUT" "$TAG" "${DEPLOYABLES[@]}"

    mkdir "$OUTPUT/$TAG" 2>/dev/null || true
    if ! test -d "$OUTPUT/$TAG"
    then
        error "could not create directory: $OUTPUT/$TAG"
        exit 1
    fi

    for DEPLOYABLE in "${DEPLOYABLES[@]}"
    do
        cp "$GIT_WORK_TREE/cmd/$DEPLOYABLE/bin/$DEPLOYABLE" "$OUTPUT/$TAG/"
    done

    open "$OUTPUT/$TAG/"
}

error() {
    echo 2>&1 "ERROR: $*"
}

validate_inputs() {
    local OUTPUT="$1" TAG="$2"
    shift
    shift

    local OK="1"

    if test -z "$TAG"
    then
        OK=""
        error "must specify -t/--tag"
    fi

    if test "$(git rev-parse HEAD 2>/dev/null)" != "$(git rev-parse "$TAG^{commit}" 2>/dev/null)"
    then
        OK=""
        error "HEAD is not at $TAG"
    fi

    if test -z "$OUTPUT"
    then
        OK=""
        error "must specify -o/--output"
    fi

    for DEPLOYABLE in "$@"
    do
        if ! test -x "$GIT_WORK_TREE/cmd/$DEPLOYABLE/bin/$DEPLOYABLE"
        then
            OK=""
            error "deployable not found: $DEPLOYABLE"
        fi
    done

    if test -z "$OK"
    then
        exit 1
    fi
}

# shellcheck disable=SC2034
# SUBDIRECTORY_OK is used by `git-sh-setup`.
SUBDIRECTORY_OK=1

# shellcheck disable=SC2034
# OPTIONS_SPEC is used by `git-sh-setup`.
OPTIONS_SPEC="\
genomics deployables -o <output> -t <tag> <deployables>...
genomics deployables -o ~/Downloads -t genomics-2018.11.1.1 marker-call-sets-service

--
h,help     show the help
o,output=  output
t,tag=     tag
"

main "$@"
