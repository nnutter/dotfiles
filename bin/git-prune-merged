#!/usr/bin/env bash

main() {
    local OPT DRY_RUN="" RM_FRESH=""

    # shellcheck disable=1090
    source "$(git --exec-path)/git-sh-setup"

    while [ $# -gt 0 ]; do
        OPT="$1"
        shift
        case $OPT in
            --) break ;;
            -n) DRY_RUN=1 ;;
            -b) RM_FRESH=1 ;;
        esac
    done

    if test -z "$1"
    then
        usage
    fi

    local UPSTREAM_BRANCH="$1"

    set -o errexit -o nounset -o pipefail

    if git remote | grep -q .
    then
        git fetch --quiet
    fi

    HEAD=$(git symbolic-ref HEAD)
    KEEP_BRANCHES=($(git show "$HEAD":.gitkeep 2> /dev/null || true))

    BRANCHES=($(git branch --list | sed 's/^..//'))
    for BRANCH in "${BRANCHES[@]}"
    do
        if rev-contains "$BRANCH" "$UPSTREAM_BRANCH" && test "$BRANCH" '!=' "$UPSTREAM_BRANCH"
        then
            if ! branch-is-checked-out "$BRANCH" && ! is-keep-branch "$BRANCH" "${KEEP_BRANCHES[@]}"
            then
                echo "=> $BRANCH: delete"
                if test -z "$DRY_RUN"
                then
                    git branch -d "$BRANCH"
                fi
            fi
        fi
    done
}

is-keep-branch() {
    local BRANCH="$1"
    shift
    local -a KEEP_BRANCHES=("$@")

    for KEEP_BRANCH in "${KEEP_BRANCHES[@]}"
    do
        if test "$BRANCH" == "$KEEP_BRANCH"
        then
            return 0
        fi
    done

    return 1
}

# `rev-contains()` checks that the source branch is contained in the
# destination branch and that the source branch isn't a fresh fork of the
# destination branch.
rev-contains() {
    local SRC="$1" DST="$2"

    if git merge-base --is-ancestor "$SRC" "$DST"
    then
        if test -n "$RM_FRESH"
        then
            if test "$(git merge-base "$SRC" "$DST")" == "$(git rev-parse "$SRC")"
            then
                return 0
            fi
        fi
    fi
    return 1
}

branch-is-checked-out() {
    git branch --list "$1" | grep -q '^\*'
}

# shellcheck disable=SC2034
# SUBDIRECTORY_OK is used by `git-sh-setup`.
SUBDIRECTORY_OK=1

# shellcheck disable=SC2034
# OPTIONS_SPEC is used by `git-sh-setup`.
OPTIONS_SPEC="\
git prune-merged <target>

Most often the usage would be \`git prune-merged master' which would remove
branches that have been merged into \`master' (or more specifically its
upstream if it has one, e.g. \`origin/master').

Any branches in \`/.gitkeep' (one per line) will be preserved.
--
h,help     show the help
n,dry-run  dry run
b          include undiverged branches, e.g. fresh branches
"

main "$@"
