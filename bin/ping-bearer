#!/usr/bin/env bash

set -o errexit -o pipefail

usage() {
    cat <<-EOM
	usage: $(basename $0) [<environment>] [<account>]

	example: curl -s -H "$(ping-bearer)" "https://product360-np.ag/marker-call-sets/v1/_liveness"
	example: curl -s -H "$(ping-bearer prod imputation)" "https://genetics.ag/taxa/v1/?ncbiId=4577"

	With no arguments defaults to,
	  $(basename $0) nonprod health-check
	Where \`health-check\` is an alias for the Ops health check account.
	EOM
}

main() {
    local ENVIRONMENT="${1:-nonprod}"
    local ACCOUNT_NAME="${2:-health-check}"

    set -o nounset

    case "$ENVIRONMENT" in
        help|-h|--help)
            usage
            exit 0
            ;;
    esac

    if ! type -p jq 1>/dev/null
    then
        echo 1>&2 'ERROR: You need to `brew install jq` to use this tool.'
        exit 1
    fi

    local PING_ACCESS_TOKEN \
          PING_CLIENT_ID PING_CLIENT_SECRET \
          PING_HOST PING_PAYLOAD PING_URL \
          VAULT_CREDENTIALS VAULT_CREDENTIALS_PATH

    VAULT_CREDENTIALS_PATH="$(vault_credentials_path_for "$ENVIRONMENT" "$ACCOUNT_NAME")"
    PING_HOST="$(ping_host_for "$ENVIRONMENT")"

    VAULT_CREDENTIALS=$(vault read -format json "$VAULT_CREDENTIALS_PATH")
    PING_CLIENT_ID=$(jq -r '.data.client_id' <<< "$VAULT_CREDENTIALS")
    PING_CLIENT_SECRET=$(jq -r '.data.client_secret' <<< "$VAULT_CREDENTIALS")

    PING_URL='https://'"$PING_HOST"'/as/token.oauth2'
    PING_PAYLOAD='client_id='"$PING_CLIENT_ID"'&client_secret='"$PING_CLIENT_SECRET"'&grant_type=client_credentials'

    PING_ACCESS_TOKEN="$(curl --silent --data '@-' "$PING_URL" <<< "$PING_PAYLOAD" | jq -r '.access_token')"

    echo 'Authorization: bearer '"$PING_ACCESS_TOKEN"
}

vault_credentials_path_for() {
    local ENVIRONMENT="$1"
    local ACCOUNT_NAME="$2"

    case "$ACCOUNT_NAME" in
        health-check)
            case "$ENVIRONMENT" in
                nonprod)
                    echo 'secret/graphroots/ops/nonprod/ping/DATA-PRODUCT360-HEALTH-CHECK-SVC'
                    ;;
                prod)
                    echo 'secret/graphroots/ops/prod/ping/DATA-PRODUCT360-HEALTH-CHECK-SVC'
                    ;;
                *)
                    echo 1>&2 "ERROR: Unknown environment: $ENVIRONMENT"
                    usage
                    exit 1
                    ;;
            esac
            ;;
        product360)
            case "$ENVIRONMENT" in
                nonprod)
                    echo 'secret/graphroots/ping/amp.test/DATA-PRODUCT360-SVC'
                    ;;
                prod)
                    echo 'secret/graphroots/ping/amp/DATA-PRODUCT360-SVC'
                    ;;
                *)
                    echo 1>&2 "ERROR: Unknown environment: $ENVIRONMENT"
                    usage
                    exit 1
                    ;;
            esac
            ;;
        graphroots)
            case "$ENVIRONMENT" in
                nonprod)
                    echo "secret/graphroots/ping/amp.test/${ACCOUNT_NAME}"
                    ;;
                prod)
                    echo "secret/graphroots/cgs/prod/ping/${ACCOUNT_NAME}"
                    ;;
                *)
                    echo 1>&2 "ERROR: Unknown environment or account name: $ENVIRONMENT -> $ACCOUNT_NAME"
                    usage
                    usage
                    exit 1
                    ;;
            esac
            ;;
        *)
            case "$ENVIRONMENT" in
                nonprod)
                    echo "secret/graphroots/cgs/nonprod/ping/${ACCOUNT_NAME}"
                    ;;
                prod)
                    echo "secret/graphroots/cgs/prod/ping/${ACCOUNT_NAME}"
                    ;;
                *)
                    echo 1>&2 "ERROR: Unknown environment or account name: $ENVIRONMENT -> $ACCOUNT_NAME"
                    usage
                    usage
                    exit 1
                    ;;
            esac
            ;;
    esac
}

ping_host_for() {
    local ENVIRONMENT="$1"

    case "$ENVIRONMENT" in
        nonprod)
            echo 'test.amp.monsanto.com'
            ;;
        prod)
            echo 'amp.monsanto.com'
            ;;
        *)
            echo 1>&2 "ERROR: Unknown environment: $ENVIRONMENT"
            usage
            exit 1
            ;;
    esac
}

main "$@"
